
import tkinter as tk
from tkinter import ttk, messagebox
import requests

def fetch_exchange_rate(from_currency, to_currency):
   url=f"https://api.exchangerate.host/convert?from={from_currency}&to={to_currency}"
    try:
        response = requests.get(url)
        data = response.json()
        if data['success']:
            return data['result'], data['info']['rate']
        else:
             raise ValueError("API response unsuccessful.")
    except Exception as e:
        messagebox.showerror("Error", f"Failed to fetch exchange rate.\n{e}")
        return None, None

def convert_currency():
    try:
        amount = float(amount_entry.get())
        from_currency = from_combo.get()
        to_currency = to_combo.get()

        converted_amount, rate = fetch_exchange_rate(from_currency, to_currency)
        if converted_amount is None or rate is None:
            return  
        final_amount = amount * rate
        result_label.config(
            text=f"{amount:.2f} {from_currency} = {final_amount:.2f} {to_currency}"
        )
        rate_label.config(
            text=f"Exchange Rate: 1 {from_currency} = {rate:.4f} {to_currency}"
        )
    except ValueError:
        messagebox.showerror("Invalid input", "Please enter a valid number.")
root = tk.Tk()
root.title("Real-Time Currency Converter")
root.geometry("420x300")
root.resizable(False, False)
tk.Label(root, text="Enter Amount:").pack(pady=5)
amount_entry = tk.Entry(root, font=("Arial", 12))
amount_entry.pack(pady=5)
currency_list = ["USD", "EUR", "GBP", "JPY", "INR", "AUD", "CAD", "CHF", "CNY", "SGD", "ZAR"]
tk.Label(root, text="From Currency:").pack(pady=5)
from_combo = ttk.Combobox(root, values=currency_list, state="readonly")
from_combo.set("USD")
from_combo.pack(pady=5)
tk.Label(root, text="To Currency:").pack(pady=5)
to_combo = ttk.Combobox(root, values=currency_list, state="readonly")
to_combo.set("INR")
to_combo.pack(pady=5)
tk.Button(root, text="Convert", command=convert_currency).pack(pady=10)
result_label = tk.Label(root, text="", font=("Arial", 16), fg="blue")
result_label.pack(pady=5)

rate_label = tk.Label(root, text="", font=("Arial", 12), fg="gray")
rate_label.pack(pady=2)

root.mainloop()
